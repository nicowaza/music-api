{"version":3,"sources":["webpack:///webpack/bootstrap 829a38edd35d89e8053a","webpack:///./src/index.js","webpack:///external \"express\"","webpack:///external \"dotenv/config\"","webpack:///external \"body-parser\"","webpack:///external \"volleyball\"","webpack:///external \"mongoose\"","webpack:///./src/config/DB.js"],"names":["SERVER_PORT","process","env","app","express","connect","get","req","res","console","log","json","msg","use","next","error","Error","message","status","listen","PORT","DBUrl","mongoose","Promise","global","db","connection","on","bind","once"],"mappings":";;;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7DA;AACA;AACA,MAAM,EAAEA,WAAF,KAAkBC,QAAQC,GAAhC;AACA,MAAMC,MAAM,+CAAAC,EAAZ;AACA;AACA;AACA;AACA;;AAGA,mEAAAC,G,CAAU;;AAEV;AACA;AACA;;;AAKAF,IAAIG,GAAJ,CAAQ,GAAR,EAAa,CAACC,GAAD,EAAMC,GAAN,KAAc;AACzBC,UAAQC,GAAR,CAAY,WAAZ;AACAF,MAAIG,IAAJ,CAAS,EAACC,KAAK,aAAN,EAAT;AACD,CAHD;;AAKAT,IAAIU,GAAJ,CAAQ,CAACN,GAAD,EAAMC,GAAN,EAAWM,IAAX,KAAoB;AAC1B,QAAMC,QAAQ,IAAIC,KAAJ,CAAU,WAAV,CAAd;AACAD,QAAME,OAAN,GAAgB,gBAAhB;AACAF,QAAMG,MAAN,GAAe,GAAf;AACAJ,OAAKC,KAAL;AACD,CALD;;AAOAZ,IAAIU,GAAJ,CAAQ,CAACE,KAAD,EAAQR,GAAR,EAAaC,GAAb,EAAkBM,IAAlB,KAA2B;AACjCN,MAAIU,MAAJ,CAAWH,MAAMG,MAAN,IAAgB,GAA3B;AACA,SAAOV,IAAIG,IAAJ,CAAS;AACdI,WAAM;AACJH,WAAKG,MAAME;AADP;AADQ,GAAT,CAAP;AAKD,CAPD;;AASAd,IAAIU,GAAJ,CAAQ,kDAAR;;AAEAV,IAAIgB,MAAJ,CAAWlB,QAAQC,GAAR,CAAYkB,IAAZ,IAAoBpB,WAA/B,EAA4C,MAAMS,QAAQC,GAAR,CAAa,2BAA0BT,QAAQC,GAAR,CAAYkB,IAAZ,IAAoBpB,WAAY,EAAvE,CAAlD,E;;;;;;AC1CA,oC;;;;;;ACAA,0C;;;;;;ACAA,wC;;;;;;ACAA,uC;;;;;;ACAA,qC;;;;;;;;;;;ACAA;AACA;AACA,MAAM,EAAEqB,KAAF,KAAYpB,QAAQC,GAA1B;;AAIA,gDAAAoB,CAASC,OAAT,GAAmBC,OAAOD,OAA1B;AACO,MAAMlB,UAAU,MAAM,gDAAAiB,CAASjB,OAAT,CAAiB,oCAAjB,CAAtB;AAAA;AAAA;;AAGP,IAAIoB,KAAK,gDAAAH,CAASI,UAAlB;;AAEAD,GAAGE,EAAH,CAAM,OAAN,EAAelB,QAAQM,KAAR,CAAca,IAAd,CAAmBnB,OAAnB,EAA4B,mBAA5B,CAAf;;AAEAgB,GAAGI,IAAH,CAAQ,MAAR,EAAgB,YAAY;AAC5BpB,UAAQC,GAAR,CAAY,sBAAZ;AACC,CAFD,E","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 829a38edd35d89e8053a","import express from 'express'\nimport \"dotenv/config\"\nconst { SERVER_PORT } = process.env\nconst app = express()\nimport bodyparser from 'body-parser'\nimport volleyball from 'volleyball'\nimport mongoose from 'mongoose'\nimport { connect } from './config/DB'\n\n\nconnect() /* on utilise la méthode connect que l'on a déclaré dans le fichier config de DB  */\n\n// mongoose.connection.on('connected', () =>\n// console.log('[MongoDB] is running on port 27017')\n// )\n\n\n\n\napp.get(\"/\", (req, res) => {\n  console.log('ça marche')\n  res.json({msg: \"tout est ok\"})\n})\n\napp.use((req, res, next) => {\n  const error = new Error('Not found')\n  error.message = 'route invalide'\n  error.status = 404\n  next(error)\n})\n\napp.use((error, req, res, next) => {\n  res.status(error.status || 500)\n  return res.json({\n    error:{\n      msg: error.message\n    }\n  })\n})\n\napp.use(volleyball)\n\napp.listen(process.env.PORT || SERVER_PORT, () => console.log(`[Express] is running on ${process.env.PORT || SERVER_PORT}`))\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 2\n// module chunks = 0","module.exports = require(\"dotenv/config\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"dotenv/config\"\n// module id = 3\n// module chunks = 0","module.exports = require(\"body-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"body-parser\"\n// module id = 4\n// module chunks = 0","module.exports = require(\"volleyball\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"volleyball\"\n// module id = 5\n// module chunks = 0","module.exports = require(\"mongoose\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mongoose\"\n// module id = 6\n// module chunks = 0","import mongoose from 'mongoose'\nimport 'dotenv/config'\nconst { DBUrl } = process.env\n\n\n\nmongoose.Promise = global.Promise;\nexport const connect = () => mongoose.connect('mongodb://localhost:27017/music_db')\n\n\nlet db = mongoose.connection;\n\ndb.on('error', console.error.bind(console, 'connection error:'));\n\ndb.once('open', function () {\nconsole.log('Connecté a MongoDB !')\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/config/DB.js"],"sourceRoot":""}